{"version":3,"sources":["component/feed/feed.module.css","component/header.module.css","component/mainContent/mainCont.module.css","UI/ui.module.css","component/header.jsx","api/axiosApi.js","store/reselect.js","component/headerReducer.js","component/headerContainer.jsx","component/loginPage/loginPage.js","component/singUpPage/signPage.js","component/profilePage/profileReduser.js","component/allUsers/allUsersReducer.js","api/firestoreApi.js","component/profilePage/userProfile.js","component/allUsers/allUsersPage.js","component/feed/feedReducer.js","component/feed/feedPage.js","map/gameReducer.js","gameEngine/gameApi.js","map/mapCOnt.js","UI/UIContainer.js","component/mainContent/mainContent.js","App.js","serviceWorker.js","store/store.js","index.js","component/profilePage/profile.module.css","map/map.module.css","component/loginPage/login.module.css","component/singUpPage/sign.module.css","component/allUsers/allusers.module.css"],"names":["module","exports","Header","props","history","useHistory","routeChange","data","path","push","className","s","log","auth","style","cursor","login","onClick","logOut","Button","variant","authApi","axios","baseURL","withCredentials","firebase","signOut","then","console","currentUser","catch","error","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","uid","authMee","state","authData","initialState","followed","status","avaUrl","HeaderContainer","this","Component","authThunk","dispatch","type","authAction","HeaderConnect","connect","dbInit","Alert","elevation","renderTextField","label","input","meta","touched","invalid","custom","TextField","floatingLabelText","helperText","renderPassField","minLength","value","length","validEmail","test","ReduxFormLogin","reduxForm","form","useState","stateFunc","handleSubmit","onSubmit","heading","location","Field","component","onChange","e","target","required","validate","id","name","marginBottom","width","autoComplete","disabled","disable","button","color","WithUrl","withRouter","errorF","disableF","values","a","authMethod","pathname","handleClose","event","reason","redirect","redirectFunc","useEffect","to","Snackbar","open","autoHideDuration","onClose","severity","ReduxFormSign","messages","profileReducer","action","init","users","currentPage","totalCount","lastItemId","allUsersReducer","db","usersPagination","method1","queryCursor","start","collection","orderBy","startAfter","limit","get","docc","resp","docs","map","doc","sendMess","who","updateServerMess","text","docRef","add","message","timestamp","FieldValue","serverTimestamp","author","saveImage","file","method","methodErr","storRef","ref","Date","toDateString","child","put","snap","getDownloadURL","url","update","saveAva","Profile","updateMessage","errorT","limitMess","getM","mId","mData","showMess","prevProps","prevState","PureComponent","PureProfile","textFunc","statusF","editM","editF","tweet","tweetF","errorTF","avaError","errorAF","messEr","messEF","content","avaBlock","Avatar","height","src","slice","accept","display","files","addAvatar","htmlFor","marginLeft","autoFocus","onBlur","statusSpan","standard-error-helper-text","mess","Array","isArray","m","ava","toUpperCase","deleteM","delete","filter","CardMessage","classes","makeStyles","messBlock","margin","padding","useStyles","Card","Tooltip","title","IconButton","aria-label","getUserMeassages","AllUsers","userWrap","allUsers","userCard","includes","foll","arrayRemove","arrayUnion","AllContainer","setCount","size","getU","lastQueryItem","current","allU","info","Math","ceil","pagination","React","setAllUsers","setUsersCount","newCurrentPage","paginationLast","feed","feedReducer","cardBlock","current_datetime","date","CardContent","Typography","apsn","toLocaleTimeString","PureFeed","alertDiv","alert","sort","b","toDate","FeedContainer","feedM","where","FieldPath","documentId","snapshot","forEach","setState","showFeed","getF","setFeed","initial","play","movePattern","score","showAnswer","dimension","choose","gameStatus","payload","move","setStart","gameRed","dim","game","moves","element","floor","random","MapMini","btnGroupClasses","classNames","block","stblock","answer","showAnswerD","scored","chooseD","gameStatusD","Path","stateF","countRef","useRef","i","loop","setTimeout","el","key","startMove","setStartD","Dimension","arr","fill","answerF","big9","big25","ind","toggle","selectedValue","setSelectedValue","handleChange","tac","FormControlLabel","control","Radio","checked","inputProps","theme","root","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","mixins","flexGrow","MainConetent","useTheme","setOpen","main","position","clsx","Toolbar","edge","Drawer","paper","direction","Divider","List","index","toLowerCase","ListItem","ListItemIcon","ListItemText","primary","body","onAuthStateChanged","user","dataRef","exists","onSnapshot","set","Boolean","window","hostname","match","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunk","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.348a904c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertDiv\":\"feed_alertDiv__3fzqG\",\"apsn\":\"feed_apsn__2RoBT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"log\":\"header_log__OfSps\",\"login\":\"header_login__1JO4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"mainCont_main__3IvGR\",\"body\":\"mainCont_body__wgyMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tac\":\"ui_tac__4ZekT\"};","import React, {useState} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport  s from './header.module.css'\r\nimport { useHistory } from 'react-router-dom';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst Header = (props) => {\r\n\r\n    let history = useHistory();\r\n    const routeChange=(data)=> {\r\n        let path = data;\r\n\r\n        history.push(path);\r\n    }\r\n    return (\r\n\r\n\r\n            <div className={s.log}>\r\n                    { props.auth ? <>Hi, {props.auth}<ExitToAppIcon style={{cursor:'pointer'}} className={s.login} onClick={props.logOut}/></>\r\n                        : <><Button onClick={() =>{routeChange('login')}} variant=\"contained\">LogIn</Button>\r\n                        <Button onClick={() =>{routeChange('signup')}} variant=\"contained\">SignUp</Button></>\r\n                    }\r\n                </div>\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default Header","import * as axios from 'axios'\r\nimport * as firebase from 'firebase';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authApi = {\r\n    authMe (){\r\n\r\n    },\r\n    logOut(){\r\n        firebase.auth().signOut().then(() =>console.log( firebase.auth().currentUser))\r\n            .catch(function(error) {\r\n\r\n                console.log(error);\r\n            });\r\n    },\r\n    logIn(email, password){\r\n        return firebase.auth().signInWithEmailAndPassword(email, password)\r\n\r\n    },\r\n    singUp(email, password){\r\n        const auth = firebase.auth()\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    },\r\n    signInit(uid){\r\n/*\r\n        if ( !uid) return\r\n        var user = firebase.auth().currentUser;\r\n        var db = firebase.firestore()\r\n        debugger\r\n        db.collection(\"userData\").doc(uid).set({\r\n\r\n            email: user.email,\r\n            uid: user.uid,\r\n            followed: [],\r\n            status: '',\r\n\r\n        })\r\n            .then(function() {\r\n\r\n                console.log(\"Document successfully written!\");\r\n                debugger\r\n            })\r\n            .catch(function(error) {\r\n                debugger\r\n                console.error(\"Error writing document: \", error);\r\n            });*/\r\n\r\n\r\n\r\n    }\r\n}","\r\n\r\n\r\nexport const authMee = (state) =>{\r\n    return state.authData.login\r\n}","const authMe='AUTH-ME'\r\nconst newAva='NEW-AVA'\r\nconst initialState = {\r\n\r\n        login: null,\r\n        uid: null,\r\n        followed: [],\r\n        status: null,\r\n        avaUrl:null\r\n\r\n}\r\n\r\nexport const headerReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case authMe:\r\n            return {...state, login: action.login, uid: action.uid, followed: action.followed,\r\n                status: action.status,\r\n                avaUrl: action.avaUrl\r\n            }\r\n        case newAva:\r\n            return {...state, avaUrl: action.url}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const authAction = (login, uid,followed,status,avaUrl) =>{\r\n    return {type: authMe, login, uid,followed,status,avaUrl}\r\n}\r\nexport const avaAdd = (url) =>{\r\n    return {type: newAva, url}\r\n}\r\n\r\n","import React, {Component} from \"react\";\r\nimport Header from \"./header\";\r\nimport {authApi} from \"../api/axiosApi\";\r\nimport {connect} from \"react-redux\";\r\nimport {authMee} from \"../store/reselect\";\r\nimport {authAction} from \"./headerReducer\";\r\nimport * as firebase from \"firebase\";\r\n\r\n\r\n\r\nclass HeaderContainer extends Component{\r\n    componentDidMount() {\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps =(state) =>{\r\n    return{\r\n        auth: authMee(state)\r\n    }\r\n}\r\n\r\nexport const authThunk = (login,uid,followed,status,avaUrl) =>{\r\n\r\n    return (dispatch) =>{\r\n        dispatch(authAction(login,uid,followed,status,avaUrl))\r\n    }\r\n}\r\nconst logOut = () =>{\r\n\r\n    return (dispatch) =>{\r\n        authApi.logOut()\r\n\r\n    }\r\n}\r\n\r\nconst dbInit = (uid) =>{\r\n\r\n    return (dispatch) =>{\r\n        authApi.signInit(uid)\r\n\r\n\r\n    }\r\n}\r\nexport const HeaderConnect = connect(mapStateToProps, {authThunk,logOut,dbInit})(HeaderContainer)","import React, {useEffect, useState} from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport  s from './login.module.css'\r\nimport {authApi} from \"../../api/axiosApi\";\r\nimport {connect} from \"react-redux\";\r\nimport {authThunk} from \"../headerContainer\";\r\nimport * as firebase from \"firebase\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nexport const renderTextField = ({\r\n                                    label,\r\n                                    input,\r\n                                    meta: { touched, invalid, error },\r\n                                    ...custom\r\n                                }) => (\r\n\r\n    <TextField\r\n        label={label}\r\n        floatingLabelText={label}\r\n        error={touched && invalid}\r\n        helperText={touched && error}\r\n        {...input}\r\n        {...custom}\r\n    />\r\n\r\n)\r\nexport const renderPassField = ({\r\n                                    label,\r\n                                    input,\r\n                                    meta: { touched, invalid, error },\r\n                                    ...custom\r\n                                }) =>  (\r\n    <TextField label={label}\r\n               floatingLabelText={label}\r\n               error={touched && invalid}\r\n               helperText={touched && error}\r\n               {...input}\r\n               {...custom}\r\n    />\r\n)\r\nexport const minLength = (value) =>{\r\n\r\n        if( value && value.length < 6) return 'Min length 6'\r\n        return  undefined\r\n\r\n}\r\nexport const validEmail = (email) =>{\r\n\r\n        if( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) return 'Not Valid Email'\r\n        return  undefined\r\n\r\n}\r\n\r\n\r\nconst SimpleForm =(props) =>{\r\n\r\n    const [state, stateFunc] = useState('')\r\n\r\n\r\n    function seting (e){\r\n\r\n       stateFunc(e.target.value)\r\n    }\r\n\r\n    const {handleSubmit} = props\r\n\r\n\r\n    return(\r\n        <form className={s.login} onSubmit={handleSubmit}>\r\n            <p className={s.heading}>{props.location === '/login' ?  'Log In' : 'Sign Up'}</p>\r\n\r\n\r\n            <Field  component={renderTextField}  label=\"Email Address\" onChange={seting} value={state}\r\n                    className={s.input}\r\n                    required\r\n                    validate={[ validEmail]}\r\n                    id=\"outlined-required\"\r\n                    name='email'\r\n\r\n                    variant=\"outlined\"\r\n\r\n                    style={{marginBottom:\"20px\",width:\"80%\"}}\r\n            /><Field  component={renderPassField}\r\n                      label=\"Password\"\r\n                      className={s.input}\r\n                      required\r\n                      validate={[ minLength]}\r\n                      id=\"outlined-required\"\r\n                      name='password'\r\n                      type=\"password\"\r\n\r\n                      autoComplete=\"current-password\"\r\n                      variant=\"outlined\"\r\n                      style={{marginBottom:\"20px\", width:\"80%\"}}\r\n            />\r\n\r\n            {props.location === '/login'\r\n            ? <Button disabled={props.disable} className={s.button} type='submit' variant=\"contained\" color=\"primary\" >LogIn</Button>\r\n            : <Button disabled={props.disable} className={s.button} variant=\"outlined\" type='submit' color=\"secondary\">SignUp</Button>}\r\n\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Login = (props)=>{\r\n    let [error, errorF] = useState(null)\r\n    let [disable, disableF] = useState(false)\r\n\r\n\r\n    async function submit(values){\r\n        let authMethod = ()=>{\r\n            if(props.location.pathname === '/signup'){\r\n            return authApi.singUp(values.email,values.password)\r\n        }\r\n    else if(props.location.pathname === '/login'){\r\n            return authApi.logIn(values.email, values.password)\r\n        }\r\n        }\r\n\r\n        disableF(true)\r\n        authMethod().then(() =>{\r\n           disableF(false)\r\n           console.log( firebase.auth().currentUser)})\r\n           .catch((error) =>{\r\n               errorF(true)\r\n               disableF(false)\r\n               console.log(error);\r\n           });\r\n\r\n    }\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        errorF(false);\r\n    };\r\n    const [redirect, redirectFunc] = useState(false)\r\n    useEffect(()=>{\r\n        if(!props.login ) return\r\n        redirectFunc(true)\r\n        console.log('dum')\r\n\r\n\r\n    },[props.login])\r\n\r\n    if(redirect){\r\n\r\n        return (<Redirect to={'/profile'}/>)\r\n    }\r\n    else{\r\n    return(\r\n        <div>\r\n            <Snackbar open={error} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\">\r\n                    Invalid email or password\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        <ReduxFormLogin onSubmit={submit} disable={disable} location={props.location.pathname}/>\r\n        </div>\r\n    )}\r\n}\r\n\r\nlet ReduxFormLogin = reduxForm({\r\n    form: 'simple' // a unique identifier for this form\r\n})(SimpleForm)\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        login: state.authData.login\r\n    }\r\n}\r\nlet WithUrl = withRouter(Login)\r\n\r\nexport  default connect(mapStateToProps, {authThunk })(WithUrl)","import React, {useEffect, useState} from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport  s from './sign.module.css'\r\nimport {authApi} from \"../../api/axiosApi\";\r\nimport {connect} from \"react-redux\";\r\nimport {authThunk} from \"../headerContainer\";\r\nimport {authMee} from \"../../store/reselect\";\r\nimport * as firebase from \"firebase\";\r\nimport {authAction} from \"../headerReducer\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport {renderPassField, renderTextField} from \"../loginPage/loginPage\";\r\n\r\n\r\n\r\n\r\nconst SimpleForm2 =(props) =>{\r\n\r\n    const [state, stateFunc] = useState('')\r\n\r\n    function seting (e){\r\n\r\n       stateFunc(e.target.value)\r\n    }\r\n\r\n    const {handleSubmit} = props\r\n    return(\r\n        <form className={s.login} onSubmit={handleSubmit}>\r\n            <p className={s.heading}>Sign Un</p>\r\n\r\n\r\n\r\n\r\n           {/*<Field name='email' component={renderTextField } type='text'  placeholder='asd' onChange={seting} value={state}/>\r\n            <Field name='password' component={renderPassField} type='password'/>\r\n            <Button className={s.button} type='submit' variant=\"contained\">SignUp</Button>*/}\r\n            <Field  component={renderTextField}\r\n                    label=\"Email Address\"\r\n                    onChange={seting}\r\n                    value={state}\r\n                    className={s.input}\r\n                    required\r\n                    id=\"outlined-required\"\r\n                    name='email'\r\n                    type=\"email\"\r\n                    variant=\"outlined\"\r\n                    style={{marginBottom:\"20px\",width:\"80%\"}}\r\n            /><Field  component={renderPassField}\r\n                      label=\"Password\"\r\n                      className={s.input}\r\n                      required\r\n                      id=\"outlined-required\"\r\n                      name='password'\r\n                      type=\"password\"\r\n                      variant=\"outlined\"\r\n                      autoComplete=\"current-password\"\r\n                      style={{marginBottom:\"20px\", width:\"80%\"}}\r\n        />\r\n\r\n\r\n            <Button className={s.button} type='submit' variant=\"contained\">SignUp</Button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginSign = (props)=>{\r\n\r\n     async function submit(values){\r\n         console.log(values)\r\n        await authApi.singUp(values.email,values.password)\r\n\r\n\r\n    }\r\n\r\n    return(\r\n        <div><ReduxFormSign onSubmit={submit}/></div>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        uid: state.authData.uid\r\n    }\r\n}\r\n\r\nlet ReduxFormSign = reduxForm({\r\n    form: 'sign' // a unique identifier for this form\r\n})(SimpleForm2)\r\n\r\nconst dbInit = (uid) =>{\r\n\r\n    return (dispatch) =>{\r\n        authApi.signInit(uid)\r\n\r\n\r\n    }\r\n}\r\nexport  default connect(mapStateToProps, {authThunk,dbInit})(LoginSign)\r\n","\r\nconst setMessage = 'SET-MESSAGE'\r\n\r\nconst initialState ={\r\n    messages: 'asd'\r\n}\r\n\r\n\r\nconst profileReducer = (state=initialState,action) =>{\r\n    switch (action.type) {\r\n        case setMessage:\r\n            return{\r\n                ...state,\r\n                messages: [...action.data]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const getUserMeassages = (data) => ({type:setMessage,data})\r\n\r\n\r\nexport default profileReducer","const setUsers='SET-USERS'\r\nconst count='SET-COUNT'\r\nconst current='NEW-CURRENT'\r\nconst lastItem='LAST-ITEM'\r\n\r\nconst init={\r\n    users:[],\r\n    currentPage: 1,\r\n    totalCount: null,\r\n    lastItemId: null\r\n}\r\n\r\nconst allUsersReducer = (state=init,action)=>{\r\n    switch (action.type) {\r\n        case setUsers:\r\n            return{\r\n                ...state,\r\n                users:[...state.users,...action.data]\r\n            }\r\n        case count:\r\n        return{\r\n            ...state,\r\n            totalCount:action.data\r\n        }\r\n        case current:\r\n        return{\r\n            ...state,\r\n            currentPage:action.data\r\n        }\r\n        case lastItem:\r\n        return{\r\n            ...state,\r\n            lastItemId:action.data\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setAllUsers = (data)=>({type:setUsers, data})\r\nexport const setUsersCount = (data)=>({type:count, data})\r\nexport const newCurrentPage = (data)=>({type:current, data})\r\nexport const paginationLast = (data)=>({type:lastItem, data})\r\nexport default allUsersReducer\r\n","import * as firebase from \"firebase\";\r\nimport {avaAdd} from \"../component/headerReducer\";\r\nimport {setUsersCount} from \"../component/allUsers/allUsersReducer\";\r\n\r\n/**/\r\n\r\nlet db = ()=>{return firebase.firestore()}\r\n\r\nexport const allUsersSize= (method)=>{\r\n\r\n    db().collection(\"userData\").get().then(snap=> method(snap.size))\r\n}\r\nexport const usersPagination= (method1,queryCursor,start=1)=>{\r\n/*let start= undefined\r\n    let limit=5\r\n    if(current===1){start=0}\r\n    else{start = limit*(current-1)+1}\r\n    console.log(start)*/\r\n\r\n\r\n    db().collection(\"userData\").orderBy('uid').startAfter(start).limit(4).get()\r\n        .then(docc =>{\r\n            let resp = docc.docs.map(doc =>  doc.data())\r\n            console.log(resp)\r\n\r\n            method1(resp)\r\n            if(docc.docs.length === 0){\r\n                queryCursor(docc.docs[docc.docs.length].data().uid)\r\n            }\r\n            else{\r\n                queryCursor(docc.docs[docc.docs.length-1].data().uid)\r\n            }\r\n\r\n\r\n        })\r\n}\r\n\r\nexport const getFeed= (who)=>{\r\n\r\n    return db().collection(\"userData\")\r\n        .where(firebase.firestore.FieldPath.documentId() , 'in',who\r\n        )\r\n        .get()\r\n}\r\n\r\nexport const getProfileM= (who)=>{\r\n\r\n    return db().collection(\"userData\").doc(who).collection('messages')\r\n        .get()\r\n}\r\nexport const sendMess = (who)=>{\r\n\r\n    return db().collection(\"userData\").doc(who).collection('messages').get()\r\n}\r\nexport const updateServerMess = (text,who,email)=>{\r\n\r\n    let docRef= db().collection(\"userData\").doc(who).collection('messages')\r\n    docRef.add({message: text,timestamp:firebase.firestore.FieldValue.serverTimestamp(), author:email})\r\n    return docRef.orderBy(\"timestamp\", \"desc\").get()\r\n\r\n\r\n}\r\nexport const saveAva = (who,url)=>{\r\n\r\n    let docRef= db().collection(\"userData\").doc(who)\r\n    docRef.update({avaUrl: url})\r\n\r\n\r\n\r\n}\r\n\r\nexport const saveImage = (file,who,method, methodErr)=>{\r\n\r\n    let storRef= firebase.storage().ref()\r\n    let name = new Date().toDateString() + file.name\r\n    storRef.child(name).put(file)\r\n        .then((snap)=> {\r\n            return snap.ref.getDownloadURL()\r\n        })\r\n        .then((url)=> {\r\n            saveAva(who, url) //to server\r\n\r\n            method(url) // save to props via callback\r\n\r\n            /*console.log('succ',url, )*/})\r\n                .catch((error) => methodErr(true))\r\n\r\n\r\n\r\n}\r\n\r\n","import React, {PureComponent, useEffect, useState} from \"react\";\r\nimport {getUserMeassages} from \"./profileReduser\";\r\nimport {connect} from \"react-redux\";\r\nimport * as firebase from \"firebase\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport  s from './profile.module.css'\r\nimport {getProfileM, saveImage, sendMess, updateServerMess} from \"../../api/firestoreApi\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {avaAdd} from \"../headerReducer\";\r\nimport AddAPhotoOutlinedIcon from '@material-ui/icons/AddAPhotoOutlined';\r\nimport {Field} from \"redux-form\";\r\nimport {minLength} from \"../loginPage/loginPage\";\r\nimport Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport const renderPassField = ({\r\n                                    label,\r\n                                    input,\r\n                                    meta: { touched, invalid, error },\r\n                                    ...custom\r\n                                }) =>  (\r\n    <TextField label={label}\r\n               floatingLabelText={label}\r\n               error={touched && invalid}\r\n               helperText={touched && error}\r\n               {...input}\r\n               {...custom}\r\n    />\r\n)\r\n\r\nclass Profile extends PureComponent{\r\n    showMess(){\r\n        getProfileM(this.props.uid).then(docc =>{\r\n            this.props.getM(docc.docs.map(doc =>  ({\r\n                    mId:doc.id, mData: doc.data()\r\n                }))\r\n            )\r\n        })\r\n    }\r\n    updateMessage =(text,method,disable,error,errorT,limitMess)=>{\r\n        if(text.length < 5){\r\n            error(true)\r\n            errorT('Dont be shy=)')\r\n            return\r\n        }\r\n        errorT('')\r\n        error(false)\r\n        method('')\r\n\r\n        limitMess(false)\r\n        sendMess(this.props.uid).then(docc =>{\r\n                if(docc.docs.map(doc => doc.data()).length === 5){\r\n                    /*console.log(docc.docs.map(doc =>  ({mId:doc.id, mData: doc.data()})))*/\r\n                    limitMess(true)\r\n                    disable(true)\r\n                    return\r\n            }\r\n                else{\r\n                    updateServerMess(text,this.props.uid,this.props.login)\r\n                        .then(docc =>{\r\n                            this.props.getM(docc.docs.map(doc =>  ({mId:doc.id, mData: doc.data()})))\r\n                            disable(false)\r\n                        } )\r\n                }\r\n\r\n            } )\r\n\r\n    }\r\n    componentDidMount() {\r\n        if(!this.props.uid) return\r\n        this.showMess()\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(!this.props.uid) return\r\n        if (prevProps.uid !== this.props.uid) {\r\n            this.showMess()\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <PureProfile {...this.props} updateMessage={this.updateMessage}/>\r\n        )\r\n    }\r\n}\r\nconst PureProfile = (props) =>{\r\n    let [text, textFunc] = useState('')\r\n    let [status, statusF] = useState(props.status)\r\n    let [editM, editF] = useState(false)\r\n    let [tweet, tweetF] = useState(false)\r\n    let [error, errorF] = useState(false)\r\n    let [errorT, errorTF] = useState('')\r\n    let [avaError, errorAF] = useState(false)\r\n    let [messEr, messEF] = useState(false)\r\n    function deleteM(id){\r\n        var db = firebase.firestore()\r\n        tweetF(false)\r\n        var docRef = db.collection(\"userData\").doc(props.uid).collection('messages')\r\n        docRef.doc(id).delete().then(function() {\r\n            props.getM(props.messages.filter(m=> m.mId !== id))\r\n            console.log(\"Document successfully deleted!\",);\r\n        }).catch(function(error) {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!props.status) return\r\n        statusF(props.status)\r\n    },[props.status])\r\n\r\n    const some =(e) =>{\r\n        textFunc(e.target.value)\r\n    }\r\n    const some2 =(e) =>{\r\n        statusF(e.target.value)\r\n    }\r\n    const some3 =() =>{\r\n        var db = firebase.firestore()\r\n        db.collection(\"userData\").doc(props.uid).update({\r\n            status: status\r\n        })\r\n        editF(false)\r\n\r\n    }\r\n    const upload =(e) =>{\r\n        saveImage(e.target.files[0],props.uid, props.addAvatar, errorAF)\r\n        console.log(e.target.files[0])\r\n    }\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        errorAF(false);\r\n        messEF(false)\r\n    };\r\n\r\n    if(props.login == null) return <Redirect to={'/login'}/>\r\n\r\n    return(\r\n        <div className={s.content}>\r\n            <Snackbar open={avaError} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\">\r\n                    {'Only images allowed size < 50KB'}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={messEr} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\">\r\n                    {'5 messages limit'}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <div >\r\n                <div className={s.avaBlock}>\r\n                    {props.avaUrl\r\n                        ? <Avatar style={{width: '90px', height:'90px' }} src={props.avaUrl}/>\r\n                        :<Avatar style={{width: '40px', }}>{props.login && props.login.slice(0,2)}</Avatar>\r\n                    }\r\n                <input\r\n                    accept=\"image/*\"\r\n\r\n                    style={{ display: 'none' }}\r\n                    id=\"raised-button-file\"\r\n                    onChange={upload}\r\n                    type=\"file\"\r\n                />\r\n                <label htmlFor=\"raised-button-file\">\r\n                    <Button  component=\"span\"  color=\"secondary\">\r\n                        <AddAPhotoOutlinedIcon/>\r\n                    </Button>\r\n                </label>\r\n                </div>\r\n                <div className={s.status}>\r\n                <span>Status:</span>\r\n                {editM ?\r\n                <TextField\r\n                    style={{marginLeft:\"20px\"}}\r\n                    id=\"standard-basic\"\r\n\r\n                    value={status}\r\n                    autoFocus={true}\r\n                    onChange={some2}\r\n                    onBlur={some3}\r\n\r\n                />\r\n\r\n                : <span  className={s.statusSpan}>{status}\r\n                <span onClick={()=> editF(true)}><EditIcon  color=\"secondary\" style={{cursor:\"pointer\"}}/></span></span>\r\n            }</div>\r\n            </div>\r\n            <div className={s.text}>\r\n\r\n\r\n                <TextField error={error}  helperText={errorT} style={{width: '90%'}} standard-error-helper-text label=\"What`s going on?\" onChange={some}\r\n                           value={text} />\r\n\r\n                <br/>\r\n            <Button disabled={tweet} onClick={() => props.updateMessage(text,textFunc,tweetF,errorF,errorTF,messEF)} variant=\"contained\" color=\"primary\">\r\n                Tweet\r\n            </Button>\r\n            </div>\r\n            <div className={s.mess}>\r\n            {Array.isArray(props.messages)  &&\r\n            props.messages.map(m=> (<CardMessage message={m.mData.message} avaUrl={props.avaUrl} ava={props.login && props.login.slice(0,2).toUpperCase()}\r\n               deleteM={() =>deleteM(m.mId)}/>\r\n            ))}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CardMessage= (props) =>{\r\n\r\n    const useStyles = makeStyles({\r\n        messBlock: {\r\n            margin: '20px',\r\n            padding: \"40px 15px\",\r\n            display: \"flex\",\r\n        },\r\n    });\r\n    const classes= useStyles()\r\n\r\n\r\nreturn(\r\n    <Card className={classes.messBlock} variant=\"outlined\">\r\n\r\n        {props.avaUrl\r\n            ? <Avatar style={{width: '40px', }} src={props.avaUrl}/>\r\n            :<Avatar style={{width: '40px', }}>{props.ava}</Avatar>\r\n        }\r\n\r\n        <div className={s.message}>\r\n        <p>{props.message}</p>\r\n        <Tooltip onClick={props.deleteM} title=\"Delete\">\r\n            <IconButton aria-label=\"delete\">\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </Tooltip>\r\n\r\n        </div>\r\n\r\n\r\n</Card>\r\n)\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        messages: state.messages.messages,\r\n        uid: state.authData.uid,\r\n        status: state.authData.status,\r\n        login: state.authData.login,\r\n        avaUrl: state.authData.avaUrl,\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        getM: (data)=> dispatch(getUserMeassages(data)),\r\n        addAvatar: (data)=> dispatch(avaAdd(data))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Profile)","import React, {useEffect, useState} from \"react\";\r\nimport {newCurrentPage, paginationLast, setAllUsers, setUsersCount} from \"./allUsersReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport * as firebase from \"firebase\";\r\nimport s  from \"./allusers.module.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {allUsersSize, usersPagination} from \"../../api/firestoreApi\";\r\nimport Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert/Alert\";\r\n\r\n\r\n\r\nconst AllUsers =(props)=>{\r\n    let [disable, disableF] = useState(false)\r\n    let [error, errorF] = useState(false)\r\n    function follow(e,foll,) {\r\n        if(props.followed.length >=3){\r\n            errorF(true)\r\n            return\r\n        }\r\n        errorF(false)\r\n        var db = firebase.firestore()\r\n        db.collection(\"userData\").doc(props.uid).update({\r\n            followed: firebase.firestore.FieldValue.arrayUnion(foll)\r\n        })\r\n    }\r\n    function unfollow(foll) {\r\n        var db = firebase.firestore()\r\n        db.collection(\"userData\").doc(props.uid).update({\r\n            followed: firebase.firestore.FieldValue.arrayRemove(foll)\r\n        }).then(()=>{\r\n\r\n            /*console.log(props.allUsers.filter(obj => {\r\n                return obj.uid === foll\r\n            }))*/\r\n        })\r\n    }\r\n\r\n   /* useEffect(()=>{\r\n        if( !props.totalCount)return\r\n        let pagination =[1,1,1,1,]\r\n        let arr = pagination.map(m=>m\r\n            )\r\n        console.log(arr)\r\n\r\n    },[props.totalCount])*/\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        errorF(false);\r\n    };\r\n    return(\r\n        <>\r\n          {/*  <div>{props.totalCount &&  pagination.map((m,ind)=> <button\r\n                key={ind} disabled={ind+1 === props.current}\r\n                onClick={()=> props.currentPage(ind+1)}\r\n                className={s.paginButton}>{ind+1}</button>)}</div>*/}\r\n            <Snackbar open={error} autoHideDuration={4000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\">\r\n                    {'Max 3 users to follow'}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        <div className={s.userWrap}>\r\n\r\n            {props.allUsers.map(m=>\r\n                <div className={s.userCard}>\r\n                    {m.avaUrl ? <Avatar  src={m.avaUrl}/>\r\n                        :<Avatar>{m.email && m.email.slice(0,2).toUpperCase()}</Avatar> }\r\n\r\n                    <p>{m.email}</p>\r\n                    {/*{m.status && <span>{m.status}</span> }*/}\r\n                    {props.followed && props.followed.includes(m.uid)\r\n                    ? <Button onClick={()=>unfollow(m.uid)}\r\n                              variant=\"contained\"\r\n                              color=\"secondary\">\r\n                        UnFollow</Button>\r\n                    : <Button disabled={props.uid ? m.uid==props.uid : true } onClick={(e)=>follow(e,m.uid)}\r\n                              variant=\"contained\"\r\n                              color=\"primary\">\r\n                        Follow</Button> }\r\n            </div>)}\r\n        </div>\r\n            </>\r\n    )\r\n}\r\n\r\nclass AllContainer extends React.Component{\r\n    componentDidMount() {\r\n        if(!this.props.totalCount){\r\n            allUsersSize(this.props.setCount)\r\n            usersPagination(this.props.getU, this.props.lastQueryItem)\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n   /* componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.current !== this.props.current) {\r\n            usersPagination(this.props.current,this.props.getU)\r\n        }\r\n    }*/\r\n   pagination(){\r\n       usersPagination(this.props.getU, this.props.lastQueryItem,this.props.lastItemId)\r\n       this.props.currentPage(this.props.current+1)\r\n   }\r\n\r\n    render() {\r\n       return(\r\n           <div className={s.allU}>\r\n            <div className={s.info}>Registerted users : {this.props.totalCount}</div>\r\n\r\n\r\n           <AllUsers  {...this.props}/>\r\n           <div className={s.button}>\r\n               {Math.ceil(this.props.totalCount/4) === this.props.current\r\n                   ?<Button variant=\"contained\"  color=\"primary\" disabled={true}>All users loaded</Button>\r\n                   :<Button  variant=\"contained\"  color=\"primary\" onClick={()=>{ this.pagination()}}>Load more users</Button>}\r\n           </div>\r\n           </div>\r\n       )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        allUsers: state.users.users,\r\n        uid: state.authData.uid,\r\n        followed: state.authData.followed,\r\n        current: state.users.currentPage,\r\n        totalCount: state.users.totalCount,\r\n        lastItemId: state.users.lastItemId,\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        getU(data){dispatch(setAllUsers(data))},\r\n        setCount(data){dispatch(setUsersCount(data))},\r\n        currentPage(data){dispatch(newCurrentPage(data))},\r\n        lastQueryItem(data){dispatch(paginationLast(data))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AllContainer)","const feed='SET-FEED'\r\n\r\n\r\nconst init={\r\n    feed:[]\r\n}\r\n\r\nconst feedReducer = (state=init,action)=>{\r\n    switch (action.type) {\r\n        case feed:\r\n            return{\r\n                ...state,\r\n                feed:[...action.data]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setFeed = (data)=>({type:feed, data})\r\nexport default feedReducer\r\n","import React from \"react\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport * as firebase from \"firebase\";\r\nimport {setFeed} from \"./feedReducer\";\r\nimport s from \"./feed.module.css\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {getFeed} from \"../../api/firestoreApi\";\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Redirect, useHistory} from 'react-router-dom';\r\n\r\n\r\nexport const CardMessage= (props) =>{\r\n    const useStyles = makeStyles({\r\n        cardBlock: {\r\n            margin: '20px',\r\n        },\r\n    });\r\n    const classes= useStyles()\r\n\r\n    let current_datetime = props.date\r\n\r\n\r\n    return(\r\n        <Card className={classes.cardBlock} variant=\"outlined\">\r\n            <CardContent>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    {props.author && <span className={s.apsn}> {props.author}</span>}\r\n                    <span className={s.apsn}>{current_datetime.toDateString()}</span>\r\n                    <span className={s.apsn}>{current_datetime.toLocaleTimeString('en-US')}</span>\r\n\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h5\">\r\n\r\n                    {props.message}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst PureFeed =(props)=>{\r\n    let history = useHistory();\r\n    const routeChange=(data)=> {\r\n        let path = data;\r\n\r\n        history.push(path);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className={s.alertDiv}>{!props.alert\r\n                ? <p>You are following: {props.followed.length} users</p>\r\n                : <p>Follow users to see their last messages <br/> <Button onClick={() =>{routeChange('users')}} variant=\"contained\">Find users</Button> </p>\r\n            }\r\n                {!props.alert && props.mess.length===0 && <p>Probably they dont have any  messages\r\n                    <br/> <Button onClick={() =>{routeChange('users')}} variant=\"contained\">Find users</Button></p>  }\r\n            </div>\r\n\r\n         {Array.isArray(props.mess) && props.mess.sort((a,b)=> b.timestamp - a.timestamp ).map(m=>(<CardMessage\r\n                 author={m.author} message={m.message} date={m.timestamp.toDate()}/>) )}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nclass FeedContainer extends React.Component{\r\n    state={\r\n        feedM: [],\r\n        alert:false\r\n    }\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    showFeed(){\r\n        getFeed(this.props.followed).then(snapshot => {\r\n            /*console.log(snapshot.docs.map(m=>m.data()))*/\r\n            snapshot.docs.forEach(doc =>{\r\n                doc.ref.collection(\"messages\").orderBy(\"timestamp\", \"desc\").limit(2).get()\r\n                    .then(docc =>{\r\n                        /*console.log( doc.data())*/\r\n                        let ava = doc.data().avaUrl\r\n                        let email= doc.data().email\r\n                        this.setState((state) => {\r\n                            return {\r\n                                feedM: [...state.feedM, ...docc.docs.map(m=>m.data())]\r\n                                        }\r\n                        })\r\n                    })\r\n\r\n            })\r\n\r\n        })\r\n    }\r\n    componentDidMount() {\r\n    if(this.props.followed.length===0){\r\n        this.setState((state) => {\r\n            return {\r\n                alert: true\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    else{\r\n        this.showFeed()\r\n    }\r\n\r\n\r\n\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(prevProps.followed !== this.props.followed){\r\n            if(this.props.followed.length!==0){\r\n                this.setState((state) => {\r\n                    return {\r\n                        alert: false\r\n                    }\r\n                })\r\n                this.showFeed()\r\n            }\r\n            else{\r\n\r\n\r\n            }\r\n\r\n\r\n           /* */\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <PureFeed {...this.props} mess={this.state.feedM} alert={this.state.alert}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        allUsers: state.users.users,\r\n        uid: state.authData.uid,\r\n        followed: state.authData.followed\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        getF(data){dispatch(setFeed(data))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FeedContainer)","const initial = {\r\n    play:false,\r\n    movePattern: [],\r\n    score: 0,\r\n    showAnswer: false,\r\n    dimension: 3,\r\n    start: null,\r\n    choose:false\r\n\r\n}\r\n\r\n\r\nconst gameRed = (state=initial, action)=>{\r\n    switch (action.type) {\r\n        case 'GAME-STATUS':\r\n            return {\r\n                ...state,\r\n                play: action.payload\r\n            }\r\n            case 'CHOOSE':\r\n            return {\r\n                ...state,\r\n                choose: action.payload\r\n            }\r\n        case 'MOVE':\r\n            return {\r\n                ...state,\r\n                movePattern: action.payload\r\n            }\r\n        case 'SCORE':\r\n            return {\r\n                ...state,\r\n                score: state.score +action.payload\r\n            }\r\n\r\n            case 'SHOW-ANSWER':\r\n            return {\r\n                ...state,\r\n                showAnswer: action.payload\r\n            }\r\n            case 'SET-DIMENSION':\r\n            return {\r\n                ...state,\r\n                dimension: action.payload\r\n            }\r\n            case 'SET-START':\r\n            return {\r\n                ...state,\r\n                start: action.payload\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const gameStatus =(data)=>{\r\n    return{\r\n        type: 'GAME-STATUS',\r\n        payload: data,\r\n    }\r\n}\r\nexport const move =(data)=>{\r\n    return{\r\n        type: 'MOVE',\r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport const score =(much)=>{\r\n    return{\r\n        type: 'SCORE',\r\n        payload: much,\r\n    }\r\n}\r\n\r\nexport const showAnswer =(data)=>{\r\n    return{\r\n        type: 'SHOW-ANSWER',\r\n        payload: data,\r\n    }\r\n}\r\nexport const dimension =(data)=>{\r\n    return{\r\n        type: 'SET-DIMENSION',\r\n        payload: data,\r\n    }\r\n}\r\nexport const choose =(data)=>{\r\n    return{\r\n        type: 'CHOOSE',\r\n        payload: data,\r\n    }\r\n}\r\nexport const setStart =(data)=>{\r\n    return{\r\n        type: 'SET-START',\r\n        payload: data,\r\n    }\r\n}\r\nexport default gameRed","import ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport React from \"react\";\r\nlet play ={\r\n    up(current,dim){\r\n        return current-dim\r\n    },\r\n    down(current,dim){\r\n        return current+dim\r\n    },\r\n    right(current,dim){\r\n        return current+1\r\n    },\r\n    left(current,dim){\r\n        return current-1\r\n    }\r\n\r\n}\r\nexport function game(current,dim,history) {\r\n    let moves =['UP', 'DOWN', 'LEFT', 'RIGHT']\r\n\r\n    if (current <= dim){\r\n        moves =moves.filter(element => element!=='UP' )\r\n    }\r\n    if ((current-1)%dim ===0 || current ===1){\r\n        moves =moves.filter(element => element!=='LEFT' )\r\n    }\r\n    if (current%dim === 0){\r\n        moves = moves.filter(element => element!=='RIGHT' )\r\n    }\r\n    if (current > (dim*dim)-dim){\r\n        moves =moves.filter(element => element!=='DOWN' )\r\n    }\r\n\r\n    let chooseMove = Math.floor(Math.random()*moves.length)\r\n    let move = moves[chooseMove]\r\n\r\n\r\n\r\n    switch(move){\r\n\r\n        case 'UP':\r\n            history.push(<ArrowUpwardIcon/>)\r\n            return play.up(current,dim)\r\n\r\n        case 'DOWN':\r\n            history.push(<ArrowDownwardIcon/>)\r\n            return play.down(current,dim)\r\n\r\n        case 'LEFT':\r\n            history.push(<ArrowBackIcon/>)\r\n            return play.left(current,dim)\r\n\r\n        case 'RIGHT':\r\n            history.push(<ArrowForwardIcon/>)\r\n            return play.right(current,dim)\r\n\r\n        default:\r\n            alert(`game ended on field ${current}`)\r\n    }\r\n\r\n\r\n}","import React, {useEffect, useRef, useState} from \"react\";\r\nimport  s from './map.module.css';\r\nimport classNames from 'classnames'\r\nimport {connect} from \"react-redux\";\r\nimport {choose, gameStatus, move, score, setStart, showAnswer,} from \"./gameReducer\";\r\nimport {game} from \"../gameEngine/gameApi\";\r\n\r\n\r\nconst Map =(props) =>{\r\n    let Dimension = props.dimension\r\n    let arr = Array(Dimension*Dimension).fill('')\r\n    let history =[];\r\n\r\n    let [answer, answerF] = useState(null)\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!props.gameStatus) return\r\n        let start = Math.floor((Math.random()*8)+1);\r\n        props.setStartD(start)\r\n        let answer=start\r\n\r\n        for(let i=0; i <=9; ++i){\r\n            answer=game(answer, Dimension,history)\r\n        }\r\n        answerF(answer)\r\n\r\n        props.startMove(history)\r\n    },[props.gameStatus])\r\n\r\n    let btnGroupClasses = classNames(\r\n        {\r\n            [s.big9]: props.dimension===3,\r\n            [s.big25]: props.dimension===5\r\n        }\r\n    );\r\n\r\n    return(\r\n        <div >\r\n            <div className={btnGroupClasses}>\r\n                {arr.map((m,ind)=><MapMini {...props}\r\n                                           id={ind+1}\r\n                                           start={props.start}\r\n                                           answer={answer}\r\n                                           key={ind}\r\n                />)}\r\n\r\n            </div>\r\n            <Path game={props.gameStatus}\r\n                  history={props.movePattern}\r\n                  start={props.start}\r\n                  answer={answer}\r\n                  chooseD={props.chooseD}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst MapMini =(props)=>{\r\n\r\n    function answer() {\r\n\r\n        props.showAnswerD(true)\r\n\r\n        if(props.id===props.answer){\r\n            /*console.log('cool')*/\r\n            props.scored(100)\r\n        }\r\n        else{\r\n            /*console.log('wrong')*/\r\n            props.scored(-100)\r\n        }\r\n        props.chooseD(false)\r\n        props.gameStatusD(false)\r\n\r\n    }\r\n\r\n    let btnGroupClasses = classNames(\r\n        s.block,\r\n        {\r\n            [s.stblock]: props.id===props.start,\r\n            [s.answer]: props.showAnswer && props.id===props.answer\r\n        }\r\n    );\r\n\r\n    return(\r\n        <button disabled={!props.choose} onClick={()=>{answer()}} className={btnGroupClasses} >\r\n            {props.id===props.start ? 'Start' : ''}\r\n\r\n        </button>\r\n    )\r\n}\r\n\r\nconst Path = (props)=>{\r\n\r\n    let [state, stateF] =useState([])\r\n\r\n    const countRef = useRef(state);\r\n    countRef.current = state;\r\n\r\n\r\n    useEffect(()=>{\r\n        countRef.current=[]\r\n        stateF([]);\r\n        if(props.start === null) return\r\n        let i=0;\r\n        (function loop(){\r\n\r\n            stateF([...countRef.current,props.history[i]]);\r\n            if (++i < props.history.length) {\r\n                setTimeout(loop, 500);\r\n            }\r\n            else{\r\n\r\n                props.chooseD(true)\r\n            }\r\n        })();\r\n\r\n    },[props.start])\r\n\r\n    return(\r\n        <>\r\n        <div className={s.path}>\r\n\r\n            {  state.map((el,id) =>(<div key={id}>{state[id]}</div>))}\r\n\r\n\r\n        </div>\r\n            <p className={s.text}>Rules: follow moves pattern in your mind and click on correct field to get points </p>\r\n            </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        gameStatus: state.game.play,\r\n        movePattern: state.game.movePattern,\r\n        score: state.game.score,\r\n        showAnswer:state.game.showAnswer,\r\n        dimension: state.game.dimension,\r\n        start: state.game.start,\r\n        choose: state.game.choose\r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return{\r\n        gameStatusD(data){\r\n            dispatch(gameStatus(data))\r\n        },\r\n        chooseD(data){\r\n            dispatch(choose(data))\r\n        },\r\n        startMove(data){\r\n            dispatch(move(data))\r\n        },\r\n        scored(data){\r\n            dispatch(score(data))\r\n        },\r\n\r\n        showAnswerD(data){\r\n            dispatch(showAnswer(data))\r\n        },\r\n        setStartD(data){\r\n            dispatch(setStart(data))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Map)","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {choose, dimension, gameStatus, move, setStart, showAnswer,} from \"../map/gameReducer\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport  s from './ui.module.css';\r\n\r\n\r\nconst Interface =(props)=>{\r\n    function newGame(){\r\n        props.gameStatusD(true)\r\n        props.showAnswerD(false)\r\n    }\r\n    const [selectedValue, setSelectedValue] = React.useState('a');\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            props.toggle(3)\r\n    }\r\n    },[])\r\n\r\n\r\n    return(\r\n        <div className={s.tac}>\r\n\r\n            <FormControlLabel value=\"end\" control={<Radio\r\n                checked={selectedValue === 'a'}\r\n                disabled={props.gameStatus}\r\n                onChange={handleChange}\r\n                onClick={()=>props.toggle(3)}\r\n                value=\"a\"\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ 'aria-label': 'A' }}\r\n            />} label=\"3x3\" />\r\n\r\n            <FormControlLabel value=\"end\" control={<Radio\r\n                checked={selectedValue === 'b'}\r\n                disabled={props.gameStatus}\r\n                onChange={handleChange}\r\n                onClick={()=>props.toggle(5)}\r\n                value=\"b\"\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ 'aria-label': 'B' }}\r\n            />} label=\"5x5\" />\r\n\r\n\r\n            <p>Score {props.score}</p>\r\n            {\r\n            <Button disabled={props.gameStatus} variant=\"contained\" onClick={newGame} color=\"secondary\">\r\n                Start New Game\r\n            </Button>\r\n           }\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        gameStatus: state.game.play,\r\n        movePattern: state.game.movePattern,\r\n        score: state.game.score,\r\n        dimension: state.game.dimension,\r\n        start: state.game.start,\r\n        choose: state.game.choose\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return{\r\n        gameStatusD(data){\r\n            dispatch(gameStatus(data))\r\n        },\r\n        showAnswerD(data){\r\n            dispatch(showAnswer(data))\r\n        },\r\n        toggle(data){\r\n            dispatch(showAnswer(false))\r\n            dispatch(move([]))\r\n            dispatch(dimension(data))\r\n            dispatch(gameStatus(false))\r\n\r\n            dispatch(setStart(null))\r\n\r\n        }\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Interface)","import React from \"react\";\r\nimport {Link, Route, Switch} from \"react-router-dom\";\r\nimport Login from \"../loginPage/loginPage\";\r\nimport LoginSign from \"../singUpPage/signPage\";\r\nimport  s from './mainCont.module.css'\r\nimport Profile from \"../profilePage/userProfile\";\r\nimport AllUsers from \"../allUsers/allUsersPage\";\r\nimport Feed from \"../feed/feedPage\";\r\n\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport Map from \"./../../map/mapCOnt\";\r\nimport Interface from \"./../../UI/UIContainer\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar/AppBar\";\r\nimport clsx from \"clsx\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport {HeaderConnect} from \"../headerContainer\";\r\n\r\n\r\n\r\n/*const drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth\r\n    },\r\n\r\n}));*/\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\n\r\nconst MainConetent = () =>{\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return(\r\n        <Switch>\r\n            <div className={s.main}>\r\n                <div className={classes.root}>\r\n                    <CssBaseline />\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: open,\r\n                        })}\r\n                    >\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, {\r\n                                    [classes.hide]: open,\r\n                                })}\r\n                            >\r\n                                <MenuIcon/>\r\n                            </IconButton>\r\n\r\n                                <HeaderConnect/>\r\n\r\n\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                        variant=\"permanent\"\r\n                        className={clsx(classes.drawer, {\r\n                            [classes.drawerOpen]: open,\r\n                            [classes.drawerClose]: !open,\r\n                        })}\r\n                        classes={{\r\n                            paper: clsx({\r\n                                [classes.drawerOpen]: open,\r\n                                [classes.drawerClose]: !open,\r\n                            }),\r\n                        }}\r\n                    >\r\n                        <div className={classes.toolbar}>\r\n                            <IconButton onClick={handleDrawerClose}>\r\n                                {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                            </IconButton>\r\n                        </div>\r\n\r\n                        <Divider />\r\n                        <List>\r\n                            {[\"Profile\", \"Users\", \"Feed\", \"Game\"].map((text, index) => (\r\n                                <Link to={`/${text.toLowerCase()}`} >\r\n                                    <ListItem button key={text}>\r\n                                        <ListItemIcon>\r\n                                            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={text} />\r\n                                    </ListItem>\r\n                                </Link>\r\n                            ))}\r\n                        </List>\r\n                        <Divider />\r\n\r\n                    </Drawer>\r\n\r\n                </div>\r\n\r\n                {/*<div className={classes.root}>\r\n                    <Drawer\r\n                        className={classes.drawer}\r\n                        variant=\"permanent\"\r\n                        classes={{\r\n                            paper: classes.drawerPaper\r\n                        }}\r\n                        anchor=\"left\"\r\n                    >\r\n                        <div />\r\n                        <Divider />\r\n                        <List>\r\n                            {[\"Profile\", \"Users\", \"Feed\", \"Game\"].map((text, index) => (\r\n                                <Link to={`/${text.toLowerCase()}`} >\r\n                                <ListItem button key={text}>\r\n                                    <ListItemIcon />\r\n                                    <ListItemText primary={text} />\r\n                                </ListItem>\r\n                                </Link>\r\n                            ))}\r\n                        </List>\r\n                        <Divider />\r\n                    </Drawer>\r\n                </div>*/}\r\n\r\n\r\n                <div className={s.body}>\r\n                    {/*<Route path=\"/\">\r\n                        <Login />\r\n                    </Route>*/}\r\n                    <Route path=\"/profile\">\r\n                        <Profile />\r\n                    </Route>\r\n                    <Route path=\"/users\">\r\n                        <AllUsers />\r\n                    </Route>\r\n                    <Route path=\"/feed\">\r\n                        <Feed />\r\n                    </Route>\r\n                    <Route path=\"/login\">\r\n                        <Login />\r\n                    </Route>\r\n                    <Route path=\"/signup\">\r\n                        <Login />\r\n                    </Route>\r\n                    <Route path=\"/game\">\r\n                        <Interface/>\r\n                        <Map/>\r\n\r\n                    </Route>\r\n                </div>\r\n            </div>\r\n        </Switch>\r\n    )\r\n}\r\nexport default MainConetent","import React from 'react';\nimport './App.css';\nimport {authThunk, HeaderConnect} from \"./component/headerContainer\";\nimport MainConetent from \"./component/mainContent/mainContent\";\nimport * as firebase from \"firebase\";\nimport {connect} from \"react-redux\";\n\n function App(props) {\n    firebase.auth().onAuthStateChanged(async function(user) {\n        if(!firebase.auth().currentUser) {\n            props.authThunk(null, null,  [])\n            return}\n            let db = firebase.firestore()\n            let uid =  firebase.auth().currentUser.uid\n            let dataRef =db.collection(\"userData\").doc(uid)\n             let login = firebase.auth().currentUser.email\n\n\n        dataRef.get().then(  snapshot =>{\n            if(snapshot.exists){\n\n                 dataRef.onSnapshot( doc=>{\n                    let followed = (doc.data().followed)\n                     let status = (doc.data().status)\n                     let avaUrl = (doc.data().avaUrl)\n\n                    props.authThunk(login, uid, followed,status,avaUrl)\n                })\n            }\n            else {\n                let user = firebase.auth().currentUser;\n                let followed=[]\n                let status= ''\n                dataRef.set({\n\n                    email: user.email,\n                    uid: user.uid,\n                    followed,\n                    status,\n                })\n                props.authThunk(login, uid, followed, status)\n            }\n        })\n\n\n    });\n  return (\n      <>\n\n        <MainConetent />\n      </>\n\n\n  );\n}\n\n/*const name = {\n    firstName: 'Philip',\n    lastName: 'Fry'\n};\n// Initialize another object\nconst details = {\n    job: 'Delivery Boy',\n    employer: 'Planet Express'\n};*/\n// Merge the objects\n\n/*for (let key in name) {\n    name[key] = details[key];\n\n}*/\n/*\nconst character = Object.assign({}, details);\ncharacter.name = 'asdasd'\nconsole.log(details);\nconsole.log(name);\nconsole.log(character)\n*/\n\n\n\n\n\n\n\nexport default connect(null, {authThunk})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {headerReducer} from \"../component/headerReducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport profileReducer from \"../component/profilePage/profileReduser\";\r\nimport allUsersReducer from \"../component/allUsers/allUsersReducer\";\r\nimport feedReducer from \"../component/feed/feedReducer\";\r\nimport gameRed from \"../map/gameReducer\";\r\n\r\n\r\nconst reducers = combineReducers(\r\n    {\r\n        authData: headerReducer,\r\n        messages: profileReducer,\r\n        users: allUsersReducer,\r\n        feed: feedReducer,\r\n        form: formReducer,\r\n        game: gameRed,\r\n\r\n    }\r\n)\r\n/*const store = createStore(reducers, applyMiddleware(thunk))*/\r\n\r\n\r\nconst store = createStore(reducers,  applyMiddleware(thunk));\r\n\r\nwindow.store = store\r\nexport default store\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport {BrowserRouter as Router, HashRouter} from \"react-router-dom\";\nimport * as firebase from 'firebase';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyArhJqkI1SecXZhxOC8FtiGulmeBBhcCtk\",\n    authDomain: \"social-network-ae990.firebaseapp.com\",\n    databaseURL: \"https://social-network-ae990.firebaseio.com\",\n    projectId: \"social-network-ae990\",\n    storageBucket: \"social-network-ae990.appspot.com\",\n    messagingSenderId: \"1054678905809\",\n    appId: \"1:1054678905809:web:7d3d4104dbcf1840dc66f0\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n/*console.log(firebase.database().ref().child('status/text'))*/\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <HashRouter>\n            <App />\n          </HashRouter>\n      </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"profile_text__2K8QF\",\"content\":\"profile_content__3UEkz\",\"status\":\"profile_status__3Cdz_\",\"statusSpan\":\"profile_statusSpan__3zEHx\",\"message\":\"profile_message__2rSvG\",\"avaBlock\":\"profile_avaBlock__38Qke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"big25\":\"map_big25__3dUPH\",\"block\":\"map_block__2c2fT\",\"big9\":\"map_big9__1EP4x\",\"stblock\":\"map_stblock__2D9Ts\",\"path\":\"map_path__2le4u\",\"answer\":\"map_answer__xZsuM\",\"text\":\"map_text__3oVl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__2kTbk\",\"heading\":\"login_heading__3odhs\",\"button\":\"login_button__3lHhE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"sign_login__3bicu\",\"heading\":\"sign_heading__1I_25\",\"button\":\"sign_button__1-gRw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userCard\":\"allusers_userCard__3B1TQ\",\"userWrap\":\"allusers_userWrap__2Z88B\",\"paginButton\":\"allusers_paginButton__2UQRH\",\"allU\":\"allusers_allU__kZaJT\",\"info\":\"allusers_info__30Dz1\",\"button\":\"allusers_button__10ALK\"};"],"sourceRoot":""}